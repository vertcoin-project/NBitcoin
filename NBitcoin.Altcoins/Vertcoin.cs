using NBitcoin.Altcoins.GincoinInternals.Lyra2;
using NBitcoin.DataEncoders;
using System;

namespace NBitcoin.Altcoins
{
	public class Vertcoin : NetworkSetBase
	{
		public static Vertcoin Instance { get; } = new Vertcoin();

		public override string CryptoCode => "VTC";

		private Vertcoin()
		{

		}
		//Format visual studio
		//{({.*?}), (.*?)}
		//Tuple.Create(new byte[]{$1, $2)
		private static readonly Tuple<byte[], int>[] pnSeed6_main = {
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x05,0x13,0xab,0xad}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x05,0xbd,0x85,0x28}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x12,0xbc,0xdc,0xb8}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x12,0xdc,0xce,0x1e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x17,0x1c,0x96,0x2c}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x18,0x9a,0x85,0x4a}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x1b,0x00,0x1f,0xfa}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x1f,0x0f,0x96,0x15}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x1f,0xcc,0x93,0x38}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x1f,0xdc,0x36,0x10}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x22,0xcb,0xaa,0xf8}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x29,0xde,0x31,0x65}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x2a,0x01,0x3e,0xa2}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x2d,0x21,0x1d,0x37}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x2e,0x26,0xfa,0xee}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x2e,0x27,0x81,0x77}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x2f,0x24,0xa1,0x2d}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x2f,0xbb,0x60,0x5d}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x31,0xff,0xe6,0x1c}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x32,0x37,0x38,0xbe}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x33,0x0f,0x7c,0x80}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x34,0xbb,0x91,0xee}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x3a,0x54,0x6a,0xf1}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x3c,0xbf,0x6a,0x94}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x3c,0xf0,0x84,0x1e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x3d,0x7d,0xc2,0x44}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x3e,0xd2,0x4c,0x0e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x40,0x35,0x81,0x1f}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x41,0x18,0xa5,0x5c}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x41,0x5e,0x32,0xe2}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x42,0x44,0x58,0x48}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x42,0x60,0xc9,0x98}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x42,0xe2,0x76,0x46}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x42,0xf9,0xe7,0x73}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x43,0x17,0x4d,0x05}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x43,0xa1,0xd0,0x4b}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x44,0x6b,0xbc,0xc9}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x44,0x96,0x86,0xb1}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x45,0x1e,0xdd,0x52}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x45,0x31,0x9d,0xfa}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x45,0x7b,0x7b,0x05}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x45,0xb2,0x18,0xd3}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x46,0x23,0xc9,0xa4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x46,0x3a,0xca,0xce}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x46,0x40,0x10,0xb1}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x46,0x5f,0xdb,0x88}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x46,0x7c,0x93,0xe9}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x46,0x7e,0x9c,0xad}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x47,0xcd,0x28,0x0c}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x47,0xd4,0x21,0x58}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x48,0x32,0xdd,0x09}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x48,0xc5,0xef,0xb4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4a,0x40,0x28,0x0b}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4a,0x50,0xeb,0xb4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4a,0x5b,0x18,0x62}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4a,0xd6,0x20,0xe4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4b,0x1b,0x6c,0x1f}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4c,0xa7,0x64,0x06}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4c,0xb3,0xc3,0xda}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4d,0x37,0xd5,0xc4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4d,0x84,0x18,0x55}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4e,0x6b,0x3a,0xc9}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x4f,0xa8,0xbf,0x56}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x50,0xd3,0xb0,0x9a}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x51,0x42,0x46,0x2f}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x51,0xec,0x13,0xc4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x51,0xfc,0xa6,0x0d}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x52,0x0e,0x28,0x45}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x52,0x10,0x38,0x89}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x52,0x45,0x75,0xa2}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x52,0xc8,0xcd,0x1e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x52,0xe8,0x94,0xf4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x53,0x4f,0x08,0xf1}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x53,0x89,0x91,0x83}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x53,0x8e,0x7f,0x1e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x53,0xdf,0x07,0xef}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x54,0x4a,0xc9,0x58}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x54,0x5c,0x7b,0x28}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x54,0x72,0x5c,0xca}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x54,0x8f,0x32,0x1f}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x54,0xf6,0x7c,0x22}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x55,0xa6,0x58,0x56}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x55,0xd6,0x44,0x7a}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x55,0xe2,0xb8,0x36}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x56,0x3a,0x07,0x82}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x56,0xce,0x06,0x74}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x57,0xbf,0x9f,0x2d}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x57,0xf1,0x69,0x9e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x58,0x61,0x6f,0xeb}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x58,0x62,0xe0,0xd5}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x58,0x62,0xe4,0x0e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x58,0xc4,0x51,0x29}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x59,0xa3,0x8c,0x06}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x59,0xa3,0x8c,0xb4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x5b,0x54,0xb8,0xc2}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x5d,0xbd,0x91,0xbb}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x5e,0xe1,0x48,0xd0}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x5e,0xf2,0xde,0x1b}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x5f,0xaa,0x53,0x37}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x5f,0xb7,0x30,0x34}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x5f,0xd3,0x56,0x54}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x5f,0xd8,0x88,0x50}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x60,0x02,0xd4,0xf5}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x65,0x64,0xae,0x8a}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x68,0x9c,0xfc,0xc8}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x68,0xcf,0x9c,0xaf}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x68,0xe1,0xd9,0x0c}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x68,0xe1,0xdc,0x13}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x68,0xed,0x9c,0x37}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x6b,0x8b,0x54,0x11}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x6b,0x96,0x30,0xaa}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x6b,0xb5,0x99,0x11}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x6c,0x14,0x70,0x55}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x6d,0x6c,0xdb,0xee}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x6d,0x85,0x5b,0x68}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x6e,0x16,0x4d,0xb2}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x76,0xd3,0x7a,0xa0}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x7c,0xb8,0xeb,0x54}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x7d,0xec,0xea,0x13}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x81,0x02,0xc7,0xef}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x84,0x94,0x99,0xef}, 9601),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x88,0x19,0x83,0x31}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x88,0x21,0xaa,0xe9}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x8d,0x7e,0x98,0x28}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x8e,0xa2,0x08,0x57}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x90,0x02,0x74,0x3b}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x91,0xef,0x00,0x7e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x91,0xef,0xfc,0x9c}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x94,0xfb,0x45,0x0b}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x9f,0xcb,0x24,0xf5}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xa0,0x27,0x38,0x57}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xa2,0xd5,0x69,0x2a}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xa2,0xdd,0xe0,0x3f}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xa7,0x63,0xfd,0x5e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xaa,0x34,0x53,0x4e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xad,0x02,0x0f,0xbf}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xad,0x21,0x70,0x28}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xad,0x30,0x5c,0xe9}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xad,0xb1,0xd1,0x07}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xae,0x6e,0xdd,0x74}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xae,0x7f,0x3d,0xbd}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb0,0x7e,0x4e,0x57}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb2,0x12,0x42,0x5e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb2,0xee,0xe0,0xd5}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb8,0x39,0x74,0x65}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb8,0xa4,0x93,0x52}, 26333),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb9,0x08,0xa5,0x96}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb9,0x08,0xa6,0x97}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb9,0x19,0x3c,0xc7}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb9,0x34,0x01,0xa4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb9,0x6d,0xc8,0xe1}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb9,0xc9,0x90,0xa2}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xb9,0xcf,0x68,0x71}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xc0,0x00,0xa0,0x51}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xc0,0xf3,0x65,0x6f}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xc6,0x0f,0x7f,0xf2}, 26333),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xc6,0x14,0x43,0x4e}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xc6,0x8f,0x8b,0xd4}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xca,0xb5,0xc8,0xad}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xcc,0x2c,0x74,0xaf}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xcf,0x86,0x2c,0x1f}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xcf,0xff,0x67,0x2d}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd0,0x71,0x85,0xc6}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd0,0x71,0xa6,0x2c}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd0,0x7c,0x9a,0x16}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd1,0xef,0x7b,0x6c}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd4,0x32,0x71,0x78}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd4,0xed,0x18,0xa7}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd5,0x59,0x6f,0xfb}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd5,0x8a,0xb6,0x54}, 5889),
	Tuple.Create(new byte[]{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xd9,0x1a,0xd0,0x77}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x14,0x03,0x3b,0xa5,0xb4,0x56,0xe0,0x9f}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x1c,0x2b,0x2b,0xaa,0xad,0xef,0xc7,0x76}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x1c,0x71,0x2e,0xe0,0xba,0xa3,0x2a,0x25}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x20,0xd9,0x3d,0x9e,0x52,0xba,0x59,0xeb}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x20,0xe4,0x39,0x11,0xe7,0x16,0x30,0xa7}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x30,0x11,0x13,0x3c,0xbb,0x45,0xae,0xab}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x30,0x40,0x07,0xdf,0xad,0xe0,0x72,0x4f}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x38,0xd6,0x2b,0x53,0x4b,0x7c,0x1a,0x75}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x04,0xef,0x2f,0x19,0xb6,0xac,0x57,0xda}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x04,0xf8,0x30,0xe3,0xad,0xf2,0x02,0xab}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x41,0x37,0x9e,0x76,0x00,0x05,0x22,0x11,0xba,0xe4,0xe7,0x15}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x10,0x26,0x27,0x7b,0x30,0xd9,0x57,0x4d}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x14,0x01,0xcf,0x1c,0x47,0x5d,0x36,0xd6}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x14,0x78,0x18,0xd0,0x9f,0xdc,0xd0,0x9b}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x14,0xb4,0x39,0xc2,0x3f,0xff,0x2d,0xd6}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x14,0xdc,0x09,0x4d,0x76,0x50,0x09,0x5e}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x18,0x19,0x0f,0x4e,0xe7,0x72,0x43,0x29}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x18,0x7e,0x36,0x03,0xbb,0xcc,0x06,0x0c}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x00,0x1b,0x3f,0x14,0xe7,0xb7,0xc5,0xe1}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x20,0x6a,0x3c,0x10,0x55,0x02,0x3f,0x5d}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x20,0xd9,0x26,0x19,0x2a,0x75,0x49,0xab}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x24,0xb6,0x39,0xb6,0xd0,0xef,0x2c,0x86}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x28,0x17,0x36,0xf5,0xbf,0xd1,0xf0,0x6e}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x28,0x42,0x29,0x67,0xe7,0x48,0xca,0xa9}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x2c,0xc3,0x3a,0x4c,0xbc,0x0f,0xd3,0x6e}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x2c,0xf9,0x2d,0x19,0xb9,0xb8,0xa0,0x90}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x34,0x31,0x0b,0x7e,0xbd,0x7d,0x90,0xe3}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x34,0x48,0x0b,0xbc,0xbe,0xa1,0xcd,0x1d}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x34,0x7c,0x31,0x36,0x51,0xf8,0xdd,0xd2}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x34,0x91,0x0a,0x60,0x97,0x61,0x79,0xb4}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x34,0xa3,0x22,0x98,0xb7,0xcd,0x22,0xf6}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x34,0xc9,0x28,0xf3,0x52,0x4e,0x2e,0xf8}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x38,0x17,0x2c,0xa3,0x52,0xdf,0x40,0xa8}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x38,0x96,0x0a,0x93,0xe8,0xe3,0x8b,0x46}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x38,0xa4,0x2b,0x5c,0xe7,0xb7,0xc5,0xe1}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x38,0xdf,0x1e,0xa2,0x52,0x11,0x70,0x75}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x38,0xf9,0x1c,0x25,0xe7,0xa8,0xb5,0x79}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x3c,0x5a,0x14,0x2f,0xb6,0x3e,0x58,0xb4}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x3c,0xcf,0x38,0x99,0xe7,0x4a,0x59,0xf4}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x3c,0xed,0x05,0x09,0x4d,0x56,0x7a,0x3a}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x04,0x78,0x33,0x7a,0x9d,0x8b,0xa9,0xb8}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x00,0xa3,0x2f,0x9d,0xe7,0xc6,0x3b,0x30}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x0c,0x6c,0x32,0xe9,0x31,0x43,0x50,0x54}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfb,0x00,0xe2,0x12,0xfb,0xbb,0x6b,0xce,0x62}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x5e,0xf5,0x79,0xfd,0x10,0xc9,0x25,0x88,0xfd,0x19,0x19,0xf9}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x10,0x2a,0x11,0xc4,0xbb,0xd3,0xed,0x7e}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x14,0x44,0x0b,0x49,0xb6,0xee,0x9e,0x7a}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x18,0x67,0x1d,0xa6,0x94,0x2f,0x7f,0x08}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x18,0xf3,0x10,0xdc,0x5d,0x2a,0x96,0xd5}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x1c,0x19,0x2a,0xd4,0xe7,0xf3,0xe6,0x61}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x1c,0x66,0x00,0x89,0xe7,0x20,0x34,0xd3}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x20,0xcd,0x3a,0x9b,0xb6,0xee,0x9e,0x7a}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x24,0x75,0x1d,0x13,0x93,0xeb,0x8f,0xaa}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x24,0xbe,0x25,0x80,0xbc,0x38,0x30,0x21}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x28,0x01,0x32,0x8b,0xb6,0xd2,0xc6,0x95}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x28,0xf6,0x07,0x19,0xb7,0xe7,0x24,0x3d}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x2c,0xad,0x08,0xa6,0xbc,0xc8,0x19,0x32}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x2c,0xec,0x93,0x87,0x2b,0xcd,0x8e,0x87}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x30,0x01,0x17,0x7d,0xb7,0xa3,0x17,0x97}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x30,0x3e,0x35,0x05,0xb6,0xc9,0x58,0x55}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x00,0x33,0xc1,0xde,0x30,0x1a,0x79,0x25}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x3c,0x7b,0x00,0xa7,0x9f,0x15,0x49,0x1c}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x3c,0xde,0x27,0x41,0x4f,0xb5,0x65,0xd2}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x04,0x0c,0x23,0x28,0xcd,0x1c,0x30,0xdd}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x08,0xe7,0x39,0xc4,0x9e,0xa4,0xc5,0xc1}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x00,0x95,0x01,0xde,0x9f,0xb3,0x1a,0x9e}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xb8,0x0c,0xba,0x3f,0xf3,0x51,0xbf,0xf4,0xf9}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x10,0x11,0x2d,0x20,0xab,0xf5,0xcd,0xca}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x10,0x54,0x33,0x7b,0xac,0x1d,0x6f,0x28}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x14,0xee,0x04,0x2e,0x4f,0xf5,0x3f,0x7c}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x20,0x27,0x23,0x04,0x8b,0xf0,0xf8,0x84}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x20,0x88,0x3c,0x8e,0xae,0xbd,0xb9,0xd0}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x20,0xed,0x01,0xdd,0xfa,0xec,0x07,0x27}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x28,0x6b,0x37,0x92,0xac,0xd7,0xbd,0xf2}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x34,0x66,0x2e,0xf1,0x2a,0x8f,0x10,0x9c}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x38,0x11,0x0f,0x0e,0xb0,0x9e,0x3c,0x44}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x38,0x33,0x3f,0xd2,0x3b,0x3f,0x54,0xa9}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x08,0x0c,0x03,0x93,0x53,0x3c,0x59,0xbb}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x6a,0xbd,0x08,0xbc,0x82,0x1f,0xce,0x00,0x42,0xc1}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x78,0xcf,0x08,0x85,0x18,0xf2,0x2a,0x47,0x3f,0x3d}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x10,0xfa,0x1a,0x55,0x26,0x98,0xec,0x77}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x18,0xa1,0x25,0x86,0xba,0x4d,0xe7,0x2c}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x18,0xa1,0x3b,0x03,0xd0,0xda,0x9f,0x15}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x20,0x91,0x31,0x41,0xbb,0x1b,0x14,0x76}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x20,0xab,0x05,0x35,0xb3,0xe6,0x24,0x43}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x28,0xba,0x1e,0x14,0xe7,0x12,0x05,0x87}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x2c,0x64,0x20,0x59,0xa6,0x37,0x92,0xd7}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x2c,0xac,0x3c,0x3b,0xac,0x71,0x80,0xe1}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x30,0x2b,0x26,0xdf,0xb6,0x1a,0x7e,0xc9}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x30,0x6d,0x09,0x9d,0xb8,0x23,0x07,0x77}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x30,0x9a,0x1f,0xb9,0x9a,0x5b,0x66,0x83}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x34,0x05,0x2a,0x10,0xb3,0x58,0x9b,0xf9}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x34,0x6b,0x0e,0x6b,0xbe,0xdf,0x7f,0x88}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x00,0x37,0x18,0xdf,0x9e,0x98,0x7f,0x6d}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x38,0xd2,0x29,0x4f,0xcc,0x50,0xff,0x7c}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x3c,0x0d,0x26,0x68,0xae,0x59,0xdb,0x76}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x3c,0x35,0x32,0x91,0x86,0x7a,0xf3,0xe5}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x04,0x8e,0x13,0x67,0x31,0x00,0xb2,0x62}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x04,0xa5,0x33,0x64,0x71,0x3a,0xe3,0x4a}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x08,0xbc,0x38,0x3d,0xbe,0x9c,0xc9,0x27}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x0c,0x0a,0x20,0x47,0xb3,0xa1,0xe1,0x90}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x0c,0x74,0x02,0x64,0xb6,0xf0,0xb2,0xee}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x90,0xd7,0x0c,0xb2,0x12,0xf1,0x61,0x73,0x25,0x2b}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x14,0x57,0x01,0x69,0x53,0xa3,0xad,0x97}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x14,0x67,0x33,0x06,0xb9,0x83,0x6c,0x16}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x18,0x2e,0x26,0xd7,0xe8,0x06,0xb7,0xac}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x24,0x20,0x1b,0xe8,0x9d,0xe2,0x08,0xda}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x24,0x22,0x1b,0xf2,0xb4,0x43,0x25,0xae}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x24,0x88,0x07,0x18,0x51,0xe0,0xf5,0x95}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x30,0xa4,0x0e,0xd2,0x94,0xf0,0xd5,0xb6}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x30,0xc8,0x0e,0x79,0x27,0xb8,0xda,0xb3}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x34,0x1f,0x0a,0xa2,0xbb,0x42,0xb9,0x33}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x34,0x27,0x1a,0x93,0xcd,0x82,0xbe,0x8a}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x34,0x29,0x04,0xb9,0xbd,0x7d,0x5e,0x92}, 15889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x34,0x8b,0x22,0x57,0x94,0xf4,0xa8,0x8e}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x34,0xa8,0x18,0x84,0x71,0x5d,0xf7,0xa8}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x38,0x7d,0x29,0x79,0xe8,0xe3,0x49,0x2a}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x38,0x9c,0x2f,0x54,0xb9,0x84,0x3f,0xdd}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x3c,0x18,0x06,0x78,0xb9,0x85,0xdf,0xc2}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x3c,0xb5,0x02,0x5f,0xd0,0xdb,0x5e,0xd2}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x08,0x23,0x1f,0x11,0xbf,0x86,0xc5,0x66}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x08,0x3b,0x05,0x8e,0xd0,0xda,0x91,0xf9}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x08,0x40,0x08,0xba,0xe7,0x0f,0xe2,0x34}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x08,0x5e,0x05,0x44,0xb5,0xa3,0x08,0xb4}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x08,0x79,0x39,0x11,0x39,0xf2,0xa7,0x35}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x08,0x87,0x2e,0x55,0xd0,0xd9,0x42,0xb8}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x08,0xca,0x3c,0xe3,0xbb,0x8e,0xdf,0x55}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x08,0xe9,0x24,0x60,0xa6,0x2b,0xd4,0xc6}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x00,0xb5,0x23,0x11,0x97,0x44,0xe6,0x18}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x0c,0x87,0x1f,0x3b,0xbe,0xe7,0x5a,0xa3}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x00,0xcf,0x3c,0x75,0x51,0x80,0xc2,0x42}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x00,0x00,0x9d,0x38,0x95,0x3c,0x00,0xf3,0x2e,0x33,0xb5,0x75,0x4c,0x35}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x19,0xf0,0x00,0x05,0x00,0xa9,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x41,0xd0,0x00,0x02,0x03,0xe3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x41,0xd0,0x00,0x02,0xd1,0xb3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x41,0xd0,0x03,0x03,0x0d,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x41,0xd0,0x07,0x00,0x04,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x41,0xd0,0x08,0x00,0x06,0x9c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x41,0xd0,0x00,0x0a,0x1f,0x05,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x41,0xd0,0x00,0x0e,0x08,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x04,0x70,0x6f,0x35,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x04,0x70,0xf2,0x8e,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x30}, 5889),
	Tuple.Create(new byte[]{0x20,0x01,0x0b,0xc8,0x31,0xd7,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01}, 5889),
	Tuple.Create(new byte[]{0x20,0x02,0x2a,0x01,0x3e,0xa2,0x00,0x00,0x00,0x00,0x00,0x00,0x2a,0x01,0x3e,0xa2}, 5889),
	Tuple.Create(new byte[]{0x20,0x02,0x2e,0xbc,0x2c,0x14,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x16}, 5889),
	Tuple.Create(new byte[]{0x24,0x05,0x65,0x81,0x13,0xc0,0x3f,0x00,0xfd,0xd2,0x7f,0xc7,0x53,0xb4,0x1d,0xbc}, 5889),
	Tuple.Create(new byte[]{0x26,0x00,0x3c,0x00,0x00,0x00,0x00,0x00,0xf0,0x3c,0x91,0xff,0xfe,0xb9,0x73,0x88}, 5889),
	Tuple.Create(new byte[]{0x26,0x00,0x3c,0x01,0x00,0x00,0x00,0x00,0xf0,0x3c,0x91,0xff,0xfe,0xb9,0xa7,0x95}, 5889),
	Tuple.Create(new byte[]{0x26,0x00,0x3c,0x02,0x00,0x00,0x00,0x00,0xf0,0x3c,0x91,0xff,0xfe,0x1c,0xdf,0x7c}, 5889),
	Tuple.Create(new byte[]{0x26,0x01,0x05,0xce,0x40,0x01,0xe6,0xf3,0xd4,0x26,0x69,0xf7,0x52,0xb6,0xcb,0x15}, 5889),
	Tuple.Create(new byte[]{0x26,0x01,0x06,0x80,0x81,0x00,0x25,0xf8,0x10,0xda,0x72,0x7a,0x88,0xd6,0x26,0x48}, 5889),
	Tuple.Create(new byte[]{0x26,0x01,0x06,0x81,0x85,0x80,0x09,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04}, 5889),
	Tuple.Create(new byte[]{0x26,0x06,0x60,0x00,0x61,0x44,0x90,0x00,0x00,0x42,0x87,0xad,0x70,0x09,0xab,0x6e}, 5889),
	Tuple.Create(new byte[]{0x26,0x07,0x53,0x00,0x02,0x03,0x1d,0xa0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, 5889),
	Tuple.Create(new byte[]{0x26,0x07,0xff,0x48,0xaa,0x81,0x37,0x00,0x00,0x00,0x00,0x00,0x03,0x48,0xe3,0x69}, 5889),
	Tuple.Create(new byte[]{0x26,0x07,0xff,0x48,0xaa,0x81,0x37,0x00,0x00,0x00,0x00,0x00,0x47,0x14,0xbe,0x53}, 5889),
	Tuple.Create(new byte[]{0x28,0x04,0x03,0x0c,0x20,0x00,0xff,0xf5,0xda,0x50,0xe6,0xff,0xfe,0xe7,0x8e,0x80}, 5889),
	Tuple.Create(new byte[]{0x2a,0x00,0xd8,0x80,0x00,0x05,0x07,0x1a,0x00,0x00,0x00,0x00,0x00,0x00,0x5a,0xe6}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x01,0xb0,0x79,0x99,0x04,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x31}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0x30,0x00,0x17,0x00,0x01,0x00,0x00,0x00,0x00,0xff,0xff,0x09,0x96}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0xf8,0x01,0x0b,0x21,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0xf8,0x01,0x20,0x52,0x8c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02}, 1003),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0xf8,0x01,0x3b,0x18,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0xf8,0x02,0x02,0x33,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0xf8,0x02,0x10,0x11,0x52,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0xf8,0x02,0x11,0x1b,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02}, 1007),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0xf8,0x00,0xa0,0x11,0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x04,0xf9,0xc0,0x10,0x00,0x50,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x07,0x9d,0x46,0x9a,0xa5,0x6d,0xb8,0xb0,0x4b,0x3a,0x47,0x0f,0xa4,0x8f}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x07,0xc8,0xaa,0xb9,0x00,0x42,0x50,0x54,0x00,0xff,0xfe,0xf4,0x7e,0x78}, 5889),
	Tuple.Create(new byte[]{0x2a,0x01,0x0e,0x35,0x8a,0xb1,0x86,0x80,0x2d,0xd5,0x92,0xa4,0x95,0xe8,0xb5,0xeb}, 5889),
	Tuple.Create(new byte[]{0x2a,0x02,0x12,0x05,0x34,0xf0,0x8f,0x10,0x02,0x0c,0x29,0xff,0xfe,0xcb,0x4c,0x68}, 5889),
	Tuple.Create(new byte[]{0x2a,0x02,0x18,0x1f,0x00,0x00,0x42,0x63,0xb1,0xda,0x77,0x95,0xdb,0x92,0xca,0x79}, 5889),
	Tuple.Create(new byte[]{0x2a,0x02,0x47,0x80,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x86,0x3e}, 5889),
	Tuple.Create(new byte[]{0x2a,0x02,0xc2,0x05,0x20,0x09,0x15,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01}, 5889),
	Tuple.Create(new byte[]{0x2a,0x02,0xc2,0x07,0x20,0x08,0x16,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01}, 5889),
	Tuple.Create(new byte[]{0x2a,0x02,0xc2,0x07,0x20,0x13,0x10,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01}, 5889),
	Tuple.Create(new byte[]{0x2a,0x03,0x3b,0x40,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x04,0x93}, 5889),
	Tuple.Create(new byte[]{0x2a,0x04,0x92,0xc7,0x00,0x02,0x03,0x8c,0x00,0x00,0x00,0x00,0x00,0x00,0x6a,0xb5}, 5889),
	Tuple.Create(new byte[]{0x2a,0x06,0x23,0x80,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x92}, 5889)
};
		private static readonly Tuple<byte[], int>[] pnSeed6_test = {
	Tuple.Create(new byte[]{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0x99,0xcb,0x26,0x31,0xba,0x48,0x51,0x31,0x39,0x0d}, 18333),
	Tuple.Create(new byte[]{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0x44,0xf4,0xf4,0xf0,0xbf,0xf7,0x7e,0x6d,0xc4,0xe8}, 18333),
	Tuple.Create(new byte[]{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0x6a,0x8b,0xd2,0x78,0x3f,0x7a,0xf8,0x92,0x8f,0x80}, 18333),
	Tuple.Create(new byte[]{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0xe6,0x4e,0xa4,0x47,0x4e,0x2a,0xfe,0xe8,0x95,0xcc}, 18333),
	Tuple.Create(new byte[]{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0x9f,0xae,0x9f,0x59,0x0b,0x3f,0x31,0x3a,0x8a,0x5f}, 18333),
	Tuple.Create(new byte[]{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0x47,0xb1,0xe4,0x55,0xd1,0xb0,0x14,0x3f,0xb6,0xdb}, 18333),
	Tuple.Create(new byte[]{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0xa0,0x60,0x9e,0x46,0x54,0xdb,0x61,0x3b,0xb2,0x6f}, 18333)
};

		public class VertcoinConsensusFactory : ConsensusFactory
		{
			public int Lyra2REBlock { get; }
			public DateTimeOffset Lyra2REStart { get; }
			public int Lyra2REv2Block { get; }
			public DateTimeOffset Lyra2REv2Start { get; }
			public int Lyra2REv3Block { get; }
			public DateTimeOffset Lyra2REv3Start { get; }

			/// <summary>
			/// Constructs an instance of <see cref="VertcoinConsensusFactory"/> with the specified algorithm parameters.
			/// </summary>
			/// <param name="lyra2REBlock">The block height where the PoW algorithm changes to Lyra2RE.</param>
			/// <param name="lyra2REStart">The block time where the PoW algorithm changes to Lyra2RE.</param>
			/// <param name="lyra2REv2Block">The block height where the PoW algorithm changes to Lyra2REv2.</param>
			/// <param name="lyra2REv2Start">The block time where the PoW algorithm changes to Lyra2REv2.</param>
			/// <param name="lyra2REv3Block">The block height where the PoW algorithm changes to Lyra2REv3.</param>
			/// <param name="lyra2REv3Start">The block time where the PoW algorithm changes to Lyra2REv3.</param>
			private VertcoinConsensusFactory(int lyra2REBlock = int.MaxValue, uint lyra2REStart = uint.MaxValue,
											 int lyra2REv2Block = int.MaxValue, uint lyra2REv2Start = uint.MaxValue,
											 int lyra2REv3Block = int.MaxValue, uint lyra2REv3Start = uint.MaxValue)
			{
				Lyra2REBlock = lyra2REBlock;
				Lyra2REStart = Utils.UnixTimeToDateTime(lyra2REStart);
				Lyra2REv2Block = lyra2REv2Block;
				Lyra2REv2Start = Utils.UnixTimeToDateTime(lyra2REv2Start);
				Lyra2REv3Block = lyra2REv3Block;
				Lyra2REv3Start = Utils.UnixTimeToDateTime(lyra2REv3Start);
			}

			/// <summary>
			/// The <see cref="VertcoinConsensusFactory"/> instance configured for the main network.
			/// </summary>
			/// <remarks>
			/// Algorithm      Start Block  Start Time
			/// Lyra2REv3      1080001      1549058708
			/// Lyra2REv2      347000       1439191139
			/// Lyra2RE        208301       1418454333
			/// Scrypt-N(2048) 0            -
			/// </remarks>
			public static VertcoinConsensusFactory Mainnet { get; } = new VertcoinConsensusFactory(208301, 1418454333,
																									347000, 1439191139,
																								   1080001, 1549058708);

			/// <summary>
			/// The <see cref="VertcoinConsensusFactory"/> instance configured for the test network.
			/// </summary>
			/// <remarks>
			/// Algorithm      Start Block  Start Time
			/// Lyra2REv3      158220       ??
			/// Lyra2REv2      0            -
			/// </remarks>
			public static VertcoinConsensusFactory Testnet { get; } = new VertcoinConsensusFactory(lyra2REv2Block: 0, lyra2REv2Start: 0,
																								   lyra2REv3Block: 158220);

			/// <summary>
			/// The <see cref="VertcoinConsensusFactory"/> instance configured for regtest.
			/// </summary>
			/// <remarks>
			/// Algorithm      Start Block  Start Time
			/// Lyra2REv3      1080001      -
			/// Lyra2REv2      347000       -
			/// Lyra2RE        208301       -
			/// Scrypt-N(2048) -            -
			/// </remarks>
			public static VertcoinConsensusFactory Regtest { get; } = new VertcoinConsensusFactory(208301, uint.MaxValue,
																								   347000, uint.MaxValue,
																								  1080001, uint.MaxValue);

			public override BlockHeader CreateBlockHeader()
			{
				return new VertcoinBlockHeader(this);
			}
			public override Block CreateBlock()
			{
				return new VertcoinBlock(new VertcoinBlockHeader(this));
			}
			public override Transaction CreateTransaction()
			{
				return new VertcoinTransaction(this);
			}

			/// <summary>
			/// Calculates the proof-of-work hash for based on the block height.
			/// </summary>
			/// <param name="blockHeight">The block height.</param>
			/// <param name="headerBytes">The data to generate a hash from.</param>
			/// <returns>The proof-of-work hash.</returns>
			public uint256 GetPoWHashForHeight(int blockHeight, byte[] headerBytes)
			{
				byte[] h;
				if (blockHeight >= Lyra2REv3Block)
					h = Lyra2REv2.ComputeHash(headerBytes);
				else if (blockHeight >= Lyra2REv2Block)
					h = Lyra2REv2.ComputeHash(headerBytes);
				else if (blockHeight >= Lyra2REBlock)
					h = Lyra2RE.ComputeHash(headerBytes);
				else
					h = Crypto.SCrypt.ComputeDerivedKey(headerBytes, headerBytes, 2048, 1, 1, null, 32);

				return new uint256(h);
			}

			/// <summary>
			/// Calculates the proof-of-work hash for based on the block time.
			/// </summary>
			/// <param name="blockTime">The block time.</param>
			/// <param name="headerBytes">The data to generate a hash from.</param>
			/// <returns>The proof-of-work hash.</returns>
			/// <remarks>
			/// Vertcoin forks its proof-of-work based on block height, so prefer to use <see cref="GetPoWHashForHeight(int, byte[])"/> if possible.
			/// This method is only useful in cases where the block time is not known.
			/// </remarks>
			public uint256 GetPoWHashForTime(DateTimeOffset blockTime, byte[] headerBytes)
			{
				byte[] h;
				if (blockTime >= Lyra2REv3Start)
					h = Lyra2REv2.ComputeHash(headerBytes);
				else if (blockTime >= Lyra2REv2Start)
					h = Lyra2REv2.ComputeHash(headerBytes);
				else if (blockTime >= Lyra2REStart)
					h = Lyra2RE.ComputeHash(headerBytes);
				else
					h = Crypto.SCrypt.ComputeDerivedKey(headerBytes, headerBytes, 2048, 1, 1, null, 32);

				return new uint256(h);
			}
		}

		public class VertcoinBlockHeader : BlockHeader
		{
			public VertcoinConsensusFactory ConsensusFactory { get; }

#pragma warning disable CS0618 // Type or member is obsolete
			internal VertcoinBlockHeader(VertcoinConsensusFactory consensusFactory)
			{
				ConsensusFactory = consensusFactory ?? throw new ArgumentNullException(nameof(consensusFactory));
			}
#pragma warning restore CS0618 // Type or member is obsolete

			public override uint256 GetPoWHash() => ConsensusFactory.GetPoWHashForTime(BlockTime, this.ToBytes());
		}

		public class VertcoinBlock : Block
		{
			public new VertcoinBlockHeader Header => (VertcoinBlockHeader)base.Header;

#pragma warning disable CS0618 // Type or member is obsolete
			internal VertcoinBlock(VertcoinBlockHeader header) : base(header)
			{
			}
#pragma warning restore CS0618 // Type or member is obsolete

			public override ConsensusFactory GetConsensusFactory()
			{
				return Header.ConsensusFactory;
			}
		}

		public class VertcoinTransaction : Transaction
		{
			public VertcoinConsensusFactory ConsensusFactory { get; }

#pragma warning disable CS0618 // Type or member is obsolete
			internal VertcoinTransaction(VertcoinConsensusFactory consensusFactory)
			{
				ConsensusFactory = consensusFactory ?? throw new ArgumentNullException(nameof(consensusFactory));
			}
#pragma warning restore CS0618 // Type or member is obsolete

			public override ConsensusFactory GetConsensusFactory()
			{
				return ConsensusFactory;
			}
		}

		public class VertcoinMainnetAddressStringParser : NetworkStringParser
		{
		}

		protected override void PostInit()
		{
			RegisterDefaultCookiePath("Vertcoin");
		}

		protected override NetworkBuilder CreateMainnet()
		{
			NetworkBuilder builder = new NetworkBuilder();
			builder.SetConsensus(new Consensus()
			{
				SubsidyHalvingInterval = 840000,
				MajorityEnforceBlockUpgrade = 750,
				MajorityRejectBlockOutdated = 950,
				MajorityWindow = 1000,
				SupportSegwit = true,
				BIP34Hash = new uint256(),
				PowLimit = new Target(new uint256("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")),
				PowTargetTimespan = TimeSpan.FromSeconds(3.5 * 24 * 60 * 60),
				PowTargetSpacing = TimeSpan.FromSeconds(2.5 * 60),
				PowAllowMinDifficultyBlocks = false,
				PowNoRetargeting = false,
				RuleChangeActivationThreshold = 1512,
				MinerConfirmationWindow = 2016,
				CoinbaseMaturity = 100,
				LitecoinWorkCalculation = true,
				ConsensusFactory = VertcoinConsensusFactory.Mainnet,
				BIP9Deployments =
				{
					[BIP9Deployments.TestDummy] = new BIP9DeploymentsParameters(28, 0, 999999999),
					[BIP9Deployments.CSV] = new BIP9DeploymentsParameters(0, 0, 999999999),
					[BIP9Deployments.Segwit] = new BIP9DeploymentsParameters(1, BIP9DeploymentsParameters.AlwaysActive, 999999999)
				}
			})
			.SetBase58Bytes(Base58Type.PUBKEY_ADDRESS, new byte[] { 71 })
			.SetBase58Bytes(Base58Type.SCRIPT_ADDRESS, new byte[] { 5 })
			.SetBase58Bytes(Base58Type.SECRET_KEY, new byte[] { 128 })
			.SetBase58Bytes(Base58Type.EXT_PUBLIC_KEY, new byte[] { 0x04, 0x88, 0xB2, 0x1E })
			.SetBase58Bytes(Base58Type.EXT_SECRET_KEY, new byte[] { 0x04, 0x88, 0xAD, 0xE4 })
			.SetNetworkStringParser(new VertcoinMainnetAddressStringParser())
			.SetBech32(Bech32Type.WITNESS_PUBKEY_ADDRESS, Encoders.Bech32("vtc"))
			.SetBech32(Bech32Type.WITNESS_SCRIPT_ADDRESS, Encoders.Bech32("vtc"))
			.SetMagic(0xdab5bffa)
			.SetPort(5889)
			.SetRPCPort(5888)
			.SetName("vtc-main")
			.AddAlias("vtc-mainnet")
			.AddAlias("vertcoin-mainnet")
			.AddAlias("vertcoin-main")
			.AddDNSSeeds(new[]
			{
				new DNSSeedData("vtconline.org", "useast1.vtconline.org"),
				new DNSSeedData("gertjaap.org", "vtc.gertjaap.org"),
				new DNSSeedData("pknight.ca", "dnsseed.pknight.ca"),
				new DNSSeedData("orderofthetaco.org", "seed.orderofthetaco.org"),
				new DNSSeedData("alexturek.org", "seed.alexturek.org"),
				new DNSSeedData("mbl.cash", "vertcoin.mbl.cash"),
			})
			.AddSeeds(ToSeed(pnSeed6_main))
			.SetGenesis("010000000000000000000000000000000000000000000000000000000000000000000000e72301fc49323ee151cf1048230f032ca589753ba7086222a5c023e3a08cf34a8b35cf52f0ff0f1e0eba57000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff460002e7034130312f30392f32303134204765726d616e7920746f2048656c7020696e20446973706f73616c206f662053797269616e204368656d6963616c20576561706f6e73ffffffff0100f2052a010000000000000000");
			return builder;
		}

		protected override NetworkBuilder CreateTestnet()
		{
			var builder = new NetworkBuilder();
			builder.SetConsensus(new Consensus()
			{
				SubsidyHalvingInterval = 840000,
				MajorityEnforceBlockUpgrade = 51,
				MajorityRejectBlockOutdated = 75,
				MajorityWindow = 1000,
				PowLimit = new Target(new uint256("00000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")),
				PowTargetTimespan = TimeSpan.FromSeconds(3.5 * 24 * 60 * 60),
				PowTargetSpacing = TimeSpan.FromSeconds(2.5 * 60),
				PowAllowMinDifficultyBlocks = true,
				PowNoRetargeting = false,
				RuleChangeActivationThreshold = 26,
				MinerConfirmationWindow = 50,
				CoinbaseMaturity = 100,
				LitecoinWorkCalculation = true,
				ConsensusFactory = VertcoinConsensusFactory.Testnet
			})
			.SetBase58Bytes(Base58Type.PUBKEY_ADDRESS, new byte[] { 74 })
			.SetBase58Bytes(Base58Type.SCRIPT_ADDRESS, new byte[] { 196 })
			.SetBase58Bytes(Base58Type.SECRET_KEY, new byte[] { 239 })
			.SetBase58Bytes(Base58Type.EXT_PUBLIC_KEY, new byte[] { 0x04, 0x35, 0x87, 0xCF })
			.SetBase58Bytes(Base58Type.EXT_SECRET_KEY, new byte[] { 0x04, 0x35, 0x83, 0x94 })
			.SetBech32(Bech32Type.WITNESS_PUBKEY_ADDRESS, Encoders.Bech32("tvtc"))
			.SetBech32(Bech32Type.WITNESS_SCRIPT_ADDRESS, Encoders.Bech32("tvtc"))
			.SetMagic(BitConverter.ToUInt32(new byte[] { (byte)'v', (byte)'e', (byte)'r', (byte)'t' }, 0))
			.SetPort(15889)
			.SetRPCPort(15888)
			.SetName("vtc-test")
			.AddAlias("vtc-testnet")
			.AddAlias("vertcoin-test")
			.AddAlias("vertcoin-testnet")
			.AddDNSSeeds(new[]
			{
				new DNSSeedData("jlovejoy.mit.edu", "jlovejoy.mit.edu"),
				new DNSSeedData("gertjaap.ddns.net", "gertjaap.ddns.net"),
				new DNSSeedData("vtconline.org", "fr1.vtconline.org"),
				new DNSSeedData("vertcoin.org", "tvtc.vertcoin.org"),
			})
			.AddSeeds(ToSeed(pnSeed6_test))
			.SetGenesis("010000000000000000000000000000000000000000000000000000000000000000000000e72301fc49323ee151cf1048230f032ca589753ba7086222a5c023e3a08cf34af2b54a58f0ff0f1e53f60d000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff460002e7034130312f30392f32303134204765726d616e7920746f2048656c7020696e20446973706f73616c206f662053797269616e204368656d6963616c20576561706f6e73ffffffff0100f2052a010000000000000000");
			return builder;
		}

		protected override NetworkBuilder CreateRegtest()
		{
			var builder = new NetworkBuilder();
			builder.SetConsensus(new Consensus()
			{
				SubsidyHalvingInterval = 150,
				MajorityEnforceBlockUpgrade = 51,
				MajorityRejectBlockOutdated = 75,
				MajorityWindow = 144,
				PowLimit = new Target(new uint256("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")),
				PowTargetTimespan = TimeSpan.FromSeconds(14 * 24 * 60 * 60),
				PowTargetSpacing = TimeSpan.FromSeconds(10 * 60),
				PowAllowMinDifficultyBlocks = true,
				MinimumChainWork = uint256.Zero,
				PowNoRetargeting = true,
				RuleChangeActivationThreshold = 108,
				MinerConfirmationWindow = 144,
				CoinbaseMaturity = 100,
				LitecoinWorkCalculation = true,
				ConsensusFactory = VertcoinConsensusFactory.Regtest
			})
			.SetBase58Bytes(Base58Type.PUBKEY_ADDRESS, new byte[] { 74 })
			.SetBase58Bytes(Base58Type.SCRIPT_ADDRESS, new byte[] { 196 })
			.SetBase58Bytes(Base58Type.SECRET_KEY, new byte[] { 239 })
			.SetBase58Bytes(Base58Type.EXT_PUBLIC_KEY, new byte[] { 0x04, 0x35, 0x87, 0xCF })
			.SetBase58Bytes(Base58Type.EXT_SECRET_KEY, new byte[] { 0x04, 0x35, 0x83, 0x94 })
			.SetBech32(Bech32Type.WITNESS_PUBKEY_ADDRESS, Encoders.Bech32("rvtc"))
			.SetBech32(Bech32Type.WITNESS_SCRIPT_ADDRESS, Encoders.Bech32("rvtc"))
			.SetMagic(0xdbb5befa)
			.SetPort(18444)
			.SetRPCPort(18443)
			.SetName("vtc-reg")
			.AddAlias("vtc-regtest")
			.AddAlias("vertcoin-reg")
			.AddAlias("vertcoin-regtest")
			.SetGenesis("010000000000000000000000000000000000000000000000000000000000000000000000e72301fc49323ee151cf1048230f032ca589753ba7086222a5c023e3a08cf34adae5494dffff7f20020000000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff460002e7034130312f30392f32303134204765726d616e7920746f2048656c7020696e20446973706f73616c206f662053797269616e204368656d6963616c20576561706f6e73ffffffff0100f2052a010000000000000000");
			return builder;
		}
	}
}
